image: ctornau/latex

before_script:
  - apt-get update && apt-get install -y python3 python3-dev python3-pip
  - python3 --version
  - python3 -m pip install --upgrade pip
  - pip3 install .

testing:
  stage: test
  script:
    - python3 -m pip install .[testing]
    - flake8 --config flake8-CI.cfg
    - pytest
    - coverage report
    - coverage xml
  artifacts:
    reports:
      cobertura: coverage.xml

#testing-tox:
#  stage: test
#  parallel:
#    matrix:
#      - PYTHON:
#    name: ${{ matrix.tox_env }}, ${{ mpl-version }}
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        include:
#          - python-version: '3.9'
#            tox_env: 'py39'
#            mpl-version: '==3.3.4'
#          - python-version: '3.9'
#            tox_env: 'py39'
#            mpl-version: '==3.4.2'
#          - python-version: '3.7'
#            tox_env: 'py37'
#            mpl-version: ''
#          - python-version: '3.8'
#            tox_env: 'py38'
#            mpl-version: ''
#          - python-version: '3.9'
#            tox_env: 'py39'
#            mpl-version: ''
#          - python-version: '3.9'
#            tox_env: 'coverage-report'
#            mpl-version: ''

#    steps:
#    - uses: actions/checkout@v2
#      with:
#        fetch-depth: 0
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install Tox
#      run: python3 -m pip install .[testing]
#    - name: Install Specific MPL version
#      run: python3 -m pip install matplotlib$${{ matrix.mpl-version }}
#    - name: Run Tox
#      run: tox -e ${{ matrix.tox_env }} --
#  artifacts:
#    reports:
#      cobertura: coverage.xml


pages:
  stage: deploy
  script:
    - python3 -m pip install .[docs]
    - cd docs; bash create_doc.sh; cd ..
    - mv docs public
    - mv gallery public/
  artifacts:
    paths:
    - public
  only:
    - master
